#!/usr/bin/env bash

export TIMEWARRIORDB=$HOME/.timewarrior_officetime

min_to_hmin()
{
    read -r input
    H=$(($input / 60))
    M=$(($input - $H*60))

    if (( $M == 0 )); then
        echo -n "${H}h"
    elif (( $H == 0 )); then
        echo -n "${M}min"
    else
        echo -n "${H}h${M}min"
    fi
}
hmin_to_min()
{
    TOTAL_MIN=0

    read -r input
    i=$input
    H=$(echo $i | cut -d 'h' -f 1)
    i=$(echo $i | cut -d 'h' -f 2)
    M=$(echo $i | cut -d 'n' -f 1 | sed 's/[mi]//g')
    TOTAL_MIN=$(($M + $H*60))

    echo -n $TOTAL_MIN
}
period_to_plus_or_minus()
{
    period=$1
    case $period in
        "day")
            so=sod;;
        "week")
            so=sow;;
        "month")
            so=som;;
        *)
            exit -1
    esac

    SOP=$(task calc $so)                                 # Start Of Period
    PERIOD=$(timew week $SOP - now \
        | grep Available \
        | sed 's/ *$//' | rev | cut -d ' ' -f 1 | rev)
    if [[ x$PERIOD == "x" ]]; then
        TOTAL=$(timew week $SOP - now \
            | grep Total \
            | sed 's/ *$//' | rev | cut -d ' ' -f 1 | rev)
        TOTAL_H=$(echo -n $TOTAL | cut -d ':' -f 1 | cut -d ' ' -f 2)
        PERIOD=$(WORKTIME_FORMAT=hour timew :${period} worktime)
        if [ $PERIOD == "0" ] && (( $PERIOD == 0 )); then
            echo -n "_"
        else
            #if [ $period == "day" ]; then
            #    #PERIOD=$(echo $PERIOD | hmin_to_min)
            #    PERIOD=$(($PERIOD - 8))
            #    #PERIOD=$(echo $PERIOD | min_to_hmin)
            #fi
            PERIOD=$(($PERIOD - $TOTAL_H))
            #if (( $(echo $PERIOD | hmin_to_min) > 2*60 )); then
            #    echo -n "#[fg=green]+${PERIOD}#[fg=default]"
            #else
            #    echo -n "+$PERIOD"
            #fi
            echo -n "+$PERIOD"
        fi
        PERIOD="+$PERIOD"
        return
    fi
    PERIOD_H=$(echo -n $PERIOD | cut -d ':' -f 1)
    PERIOD_M=$(echo -n $PERIOD | cut -d ':' -f 2 | sed 's/^0//g')
    PERIOD_S=$(echo -n $PERIOD | cut -d ':' -f 3 | sed 's/^0//g')
    #if (( $PERIOD_H <= 1 )); then
    #    #if (( $PERIOD_H >= 1 )); then
    #    #    PERIOD="${PERIOD_H}h${PERIOD_M}min"
    #    #else
    #    #    PERIOD="${PERIOD_M}min"
    #    #fi
    #    PERIOD=$PERIOD_H
    #else
    #    PERIOD="$((${PERIOD_H} + 1))"
    #fi
    PERIOD="$((${PERIOD_H} + 1))"
    echo -n "-$PERIOD"
}

DAY=$(period_to_plus_or_minus day)
if (( $DAY <= -3 )); then
    DAY="#[fg=red]${DAY}#[fg=default]"
elif (( $DAY <= -2 )); then
    DAY="#[fg=brightred]${DAY}#[fg=default]"
elif (( $DAY <= -1 )); then
    DAY="#[fg=yellow]${DAY}#[fg=default]"
elif (( $DAY >= 2 )); then
    DAY="#[fg=green]${DAY}#[fg=default]"
fi

WEEK=$(period_to_plus_or_minus week)
if (( $WEEK <= -4 )); then
    WEEK="#[fg=red]${WEEK}#[fg=default]"
elif (( $WEEK <= -3 )); then
    WEEK="#[fg=brightred]${WEEK}#[fg=default]"
elif (( $WEEK <= -2 )); then
    WEEK="#[fg=yellow]${WEEK}#[fg=default]"
elif (( $WEEK >= 4 )); then
    WEEK="#[fg=green]${WEEK}#[fg=default]"
fi

MONTH=$(period_to_plus_or_minus month)
if (( $MONTH <= -8 )); then
    MONTH="#[fg=red]${MONTH}#[fg=default]"
elif (( $MONTH <= -6 )); then
    MONTH="#[fg=brightred]${MONTH}#[fg=default]"
elif (( $MONTH <= -4 )); then
    MONTH="#[fg=yellow]${MONTH}#[fg=default]"
elif (( $MONTH >= 8 )); then
    MONTH="#[fg=green]${MONTH}#[fg=default]"
fi

echo -n "[${DAY}/${WEEK}/${MONTH}]"
